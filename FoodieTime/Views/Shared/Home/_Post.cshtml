@model Post

@{
    TimeSpan timeSpanSincePosted = DateTime.UtcNow.Subtract(Model.DateCreated);

    string displayTime = "";
    if (timeSpanSincePosted.TotalDays == 1)
        displayTime = $"{timeSpanSincePosted.Days} day ago";
    else if (timeSpanSincePosted.TotalDays > 1)
        displayTime = $"{timeSpanSincePosted.Days} days ago";
    else if (timeSpanSincePosted.TotalHours == 1)
        displayTime = $"{timeSpanSincePosted.Hours} hour ago";
    else if (timeSpanSincePosted.TotalHours > 1)
        displayTime = $"{timeSpanSincePosted.Hours} hours ago";
    else if (timeSpanSincePosted.TotalMinutes == 1)
        displayTime = $"{timeSpanSincePosted.Minutes} minute ago";
    else if (timeSpanSincePosted.TotalMinutes > 1)
        displayTime = $"{timeSpanSincePosted.Minutes} minutes ago";
    else
        displayTime = "Just now";

    bool isFavorited = Model.Favorites.Any(n => n.UserId == 1);
    bool isLiked = Model.Likes.Any(n => n.UserId == 1);
    bool isPrivate = Model.IsPrivate == true && Model.UserId == 1;
}



<div class="bg-white rounded-xl shadow-sm text-sm font-medium border1">
    <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
        <a>
            <img src="@(Model.User.ProfilePictureUrl ?? "~/images/avatar/user.png")" class="w-9 h-9 rounded-full" />
        </a>
        <div class="flex-1">
            <a>
                <h4 class="text-black">@Model.User.FullName</h4>
                <div class="text-xs text-gray-500/80">@displayTime</div>
            </a>
            <a>
                <div class="text-xs text-black">@Model.Restaurant - @Model.Dish</div>
                <div class="text-xs text-gray-500/80">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Model.Rating)
                        {
                            <span class="text-yellow-500">&#9733;</span> @* Filled Star *@
                        }
                        else
                        {
                            <span class="text-gray-300">&#9734;</span> @* Empty Star *@
                        }
                    }
                </div>
            </a>
        </div>
        <div class="-mr-1">
            <button type="button" class="button-icon w-8 h-8">
                <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon>
            </button>
            <div class="w-[245px] post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
                @if(Model.UserId == 1)
                {
                    <form asp-asp-controller="Home" asp-action="TogglePostVisibility">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="hover:!bg-red-50 icon-link">
                            <ion-icon class="text-xl text-yellow-500 shrink-0" name="@(!isPrivate ? "lock-closed-outline" : "lock-open-outline")"></ion-icon>Set as @(!isPrivate ? "Private" :
                        "Public")
                        </button>
                    </form>
                    <hr>
                    <button type="button" onclick="openPostDeleteConfirmation('@Model.Id')" class="text-red-400 hover:!bg-red-50 delete-post-btn">
                        <ion-icon class="text-xl text-red-500 shrink-0" name="trash-bin-outline"></ion-icon>Delete Post
                    </button>
                }
                
            </div>
        </div>
    </div>
    <a>
        <div class="px-sm-4 p-2.5 pt-0 w-full">

            <p class="font-normal">@Model.Content</p>
        </div>
    </a>

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a>
            <div class="relative w-full lg:h-96 h-full sm:px-4">
                <img src="@Model.ImageUrl" class="sm:rounded-lg w-full h-full object-cover" />
            </div>
        </a>
    }


    <div class="p-sm-4 p-2.5 flex items-center gap-4 text-xs font-semibold">
        <div class="flex items-center gap-2.5">
            <form asp-controller="Home" asp-action="TogglePostLike">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="button-icon text-red-500">
                    <ion-icon class="text-lg" name="@(isLiked ? "heart" : "heart-outline"
                    )"></ion-icon>
                </button>
            </form>

            <a href="#">@Model.Likes.Count</a>
        </div>
        <div class="flex items-center gap-3">
            <a class="button-icon text-blue-500">
                <ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <a href="#">@Model.Comments.Count</a>
        </div>
        <div class="ml-auto"></div>
        <div class="flex items-center gap-1.5">
            <form asp-controller="Home" asp-action="TogglePostFavorite">
                <input type="hidden" name="postId" value="@Model.Id"/>
                <button type="submit" class="button-icon text-yellow-500 ml-auto @(Model.Favorites.Any(n => n.UserId == 1) ? "text-yellow-500 bt-yellow-100":"") ">
                    <ion-icon class="text-lg" name="@(isFavorited ? "bookmark":"bookmark-outline")"></ion-icon>
                </button>
            </form>
            <a href="#">@Model.Favorites.Count</a>
        </div>
    </div>

    <div>
        <div class="p-2.5 border-t border-gray-100 font-normal space-y-3 relative">
            @foreach(var comment in Model.Comments.OrderByDescending(n => n.DateCreated).Take(3))
            {
                TimeSpan commentTimeSpanSincePosted = DateTime.UtcNow.Subtract(comment.DateCreated);
                string commentDisplayTime = "";

                if (commentTimeSpanSincePosted.TotalDays == 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Days} day ago";
                else if (commentTimeSpanSincePosted.TotalDays > 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Days} days ago";
                else if (commentTimeSpanSincePosted.TotalHours == 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Hours} hour ago";
                else if (commentTimeSpanSincePosted.TotalHours > 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Hours} hours ago";
                else if (commentTimeSpanSincePosted.TotalMinutes == 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Minutes} minute ago";
                else if (commentTimeSpanSincePosted.TotalMinutes > 1)
                    commentDisplayTime = $"{commentTimeSpanSincePosted.Minutes} minutes ago";
                else
                    commentDisplayTime = "Just now";

                <div class="flex items-start gap-3 relative">
                    <a>
                        <img src="@(comment.User.ProfilePictureUrl ?? "~/images/avatar/user.png")" class="w-6 h-6 mt-1 rounded-full" />
                    </a>
                    <div class="flex-1">
                        <div class="flex justify-content-between">
                            <a class="text-black font-medium inline-block flex-grow">
                                @comment.User.FullName
                            </a>
                            <small>@commentDisplayTime</small>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="mt-0.5">@comment.Content</p>
                            <form asp-asp-controller="Home" asp-action="RemovePostComment">
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <button type="submit" class="text-red-500 text-xs ml-2">
                                    <ion-icon name="trash-outline" title=""></ion-icon>
                                </button>
                            </form>
                        </div>


                        
                    </div>
                </div>
            }
            @if(Model.Comments.Count >= 3)
            {
                <div class="p-1.5">
                    <a>Show all comments</a>
                    
                </div>
            }
        </div>
        <form asp-controller="Home" asp-action="AddPostComment">
            <div class="sm:px-4 sm:py-3 p-2.5 border-t border-gray-100 flex items-center gap-1">
                <img src="~/images/avatar/user.png" class="w-6 h-6 rounded-full" />
            
                    <input type="hidden" name="postId" value="@Model.Id" />
                    <div class="flex-1 relative overflow-hidden h-10">
                        <textarea name="content" placeholder="Add Comment..." 
                        rows="1" 
                        class="w-full resize-none !bg-transparent px-4 py-2 focus:!border-transparent focus:!ring-transparent"></textarea>
                    </div>
                <button type="submit" class="text-sm rounded-full py-1.5 px-3.5 bg-blue-500 text-white hover:bg-blue-600">Comment</button>

            
            </div>
        </form>
    </div>
</div>

